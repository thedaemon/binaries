[Filetype]
txt=%edit%
asm=%edit%
inc=%edit%
vbs=%edit%
ini=%edit%
h=%edit%
c=%edit%
mak=wmake -a -f
makefile=wmake -a -f

[View]
;F3=
;Alt=
;Ctrl=
;Shift=

[Edit]
;F3=
;Alt=
;Ctrl=
;Shift=

[Directory]
0=Doszip &Directory,%doszip%
1=<>
2=&Temp Directory,%TEMP%

[Tools]
0=&Add tool,%edit% %dz%\dz.ini
1=<>
2=View &DOSZIP.TXT,%view% %dz%\doszip.txt

[Filter]
0=&Executable,*.exe *.com *.bat
1=&Compressed,*.lzh *.zoo *.zip *.arj *.pak *.arc *.7z *.bz2 *.tar
2=&Source code,*.asm *.inc *.c *.h

[Load]
;0=mode con lines=25

[MKList]
0=Delete .err files,err.bat@del %f\n
1=Object list1,objects1.mif@%n.obj \\\n
2=Object list2,objects2.mif@%n.obj &\n

[Comspec]
;0=%SYSTEMROOT%\SYSTEM32\CMD.EXE
;1=/S /C

[Compress]
0=ARJ (C) Robert K. Jung
1=RAR (C) E. Roshal
[ARJ (C) Robert K. Jung]
0=arj u -jm -y
1=!
2=.arj
[RAR (C) E. Roshal]
0=rar u -y
2=.rar

[Decompress]
0=.ARJ
1=.RAR
[.ARJ]
0=arj x -y
[.RAR]
0=rar x -y

[Style]
asm=style_asm
inc=style_asm
c=style_c
h=style_c

[style_default]
0=.control
1=.quote
2=.number
3=.$
4=.operator

[.control]
0=O 40
[.quote]
0=Q XB
[.number]
0=D XB
[.$]
0=C XB $\
[.operator]
0=C XF .:!|/<[{()}]>,-*+?%&=^~";"

[style_asm]
0=.asm_color
1=[style_default]
2=.regs
3=.cs
4=.acc
5=.base
6=.seg
7=.call
8=.jmp
9=.dir
10=.x86
11=.32
12=.if
13=.include
14=.comment

[.asm_color]
0=A 07
[.if]
0=W X2 if ifdef ifndef else elseif endif while break endw
[.comment]
0=B X8 ";"
[.include]
0=B X2 include
[.cs]
0=W X5 cs ds es ss
[.base]
0=W X6 ebp esi edi ebx bp si di bx bh bl
[.acc]
0=W X4 eax ax ah al
[.regs]
0=W X2 ecx edx esp cx dx sp cl dl ch dh
[.jmp]
0=W X9 jmp ja jb jc jz jna jnb jnc jnz jna jnz je jne jae jbe jl jg jle jge js jns
[.call]
0=W X6 call invoke int ret iret
[.dir]
0=W XF public local extrn label proto proc near far endp ends size struc
1=segment seg offset ptr byte word dword db dw dd equ textequ
2=pascal c stdcall end externdef model compact large macro endm
[.seg]
0=W XF code data stack _text _data flat
[.x86]
0=W X3
1=mov movzx movsx xchg cwb cbw lodsb stosb lodsw stosw movsb movsw
2=push pop popa pusha lea les lds
3=and or xor not neg add adc sub sbb shl shr dec inc
4=cmp test cld std clc stc mul div imul idiv
5=rep repe repne repz repnz in out aam org
[.32]
0=W XB
1=lodsd stosd movsd

[style_c]
0=[style_default]
1=.c.words
2=.#
3=.//
4=./**/

[.#]
0=B X2 #
[.//]
0=B X8 //
[./**/]
0=N X8 /* */
[.c.words]
0=W XF const operator char int long void typedef struct
1=if else for do while break continue goto return
2=switch case default public extern
